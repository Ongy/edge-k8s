apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr
  name: radarr
  namespace: mediaretriever
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      volumes:
        - name: radarr-config
          nfs:
            path: /srv/share/backed/appdata/radarr/
            server: mario.local.ongy.net
            readOnly: false
        - name: media-data
          nfs:
            path: /srv/share/media
            server: mario.local.ongy.net
            readOnly: false
      containers:
        - image: cr.hotio.dev/hotio/radarr:latest
          readinessProbe:
            httpGet:
              path: /
              port: 7878
          env:
          - name: PUID
            value: "1005"
          - name: GUID
            value: "1004"
          - name: UMASK
            value: "002"
          securityContext:
            privileged: true
          name: radarr
          volumeMounts:
            - mountPath: "/config"
              name: radarr-config
            - mountPath: "/data"
              name: media-data
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: mediaretriever
spec:
  selector:
    app: radarr
  ports:
    - protocol: TCP
      port: 7878
      name: http
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: radarr
spec:
  gateways: [istio-system/gateway]
  hosts: [radarr.local.ongy.net]
  http:
  - route:
    - destination:
        host: radarr.mediaretriever.svc.cluster.local
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: radarr
  namespace: mediaretriever
spec:
  podSelector:
    matchLabels:
      app: radarr
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: istio-system
      ports:
        - protocol: TCP
          port: 7878
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: qbittorrent
      ports:
        - protocol: TCP
          port: 8080
