---
apiVersion: v1
kind: Namespace
metadata:
  name: photoprism
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: latest

    # We are setting these to our _desired_ `enforce` level.
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: photoprism-config-pv
spec:
  capacity:
    storage: 100G
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  claimRef:
    name: photoprism-config-pvc
    namespace: photoprism
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/share/backed/appdata/photoprism
    server: mario.local.ongy.net
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: photoprism-config-pvc
  namespace: photoprism
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: photoprism-config-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: photoprism
  name: photoprism
  namespace: photoprism
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photoprism
  template:
    metadata:
      labels:
        app: photoprism
    spec:
      volumes:
        - name: photoprism-config
          persistentVolumeClaim:
            claimName: photoprism-config-pvc

          #nfs:
          #  path: /srv/share/backed/appdata/photoprism
          #  server: mario.local.ongy.net
          #  readOnly: false
      containers:
        - image: photoprism/photoprism
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ['ALL']
              add: ['NET_BIND_SERVICE']
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            privileged: false
          readinessProbe:
            httpGet:
              path: /
              port: 2342
          env:
          - name: PHOTOPRISM_UPLOAD_NSFW
            value: "true"
          - name: PHOTOPRISM_ADMIN_PASSWORD
            value: "insecure"
          - name: PHOTOPRISM_SPONSOR
            value: "true"
          - name: PHOTOPRISM_ORIGINALS_LIMIT
            value: "-1"
          name: photoprism
          volumeMounts:
            - mountPath: "/photoprism"
              name: photoprism-config
---
apiVersion: v1
kind: Service
metadata:
  name: photoprism
  namespace: photoprism
spec:
  selector:
    app: photoprism
  ports:
    - protocol: TCP
      port: 2342
      name: http
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: photoprism
spec:
  gateways: [istio-system/gateway]
  hosts: [photoprism.local.ongy.net]
  http:
  - route:
    - destination:
        host: photoprism.photoprism.svc.cluster.local
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: photoprism
  namespace: photoprism
spec:
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: istio-system
      ports:
        - protocol: TCP
          port: 2342
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
