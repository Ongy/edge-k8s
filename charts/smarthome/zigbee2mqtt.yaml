---
apiVersion: v1
kind: Namespace
metadata:
  name: zigbee2mqtt

  labels:
    # Baseline, because I don't want to bother with the volume claims
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: latest

    # We are setting these to our _desired_ `enforce` level.
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zigbee-pv
spec:
  capacity:
    storage: 1G
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  claimRef:
    name: zigbee-pvc
    namespace: zigbee2mqtt
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/share/backed/appdata/zigbee2mqtt
    server: mario.local.ongy.net
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zigbee-pvc
  namespace: zigbee2mqtt
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: zigbee-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zigbee2mqtt
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      labels:
        app: zigbee2mqtt
    spec:
      volumes:
        - name: zigbee2mqtt-data
          persistentVolumeClaim:
            claimName: zigbee-pvc
      containers:
        - image: koenkk/zigbee2mqtt
          imagePullPolicy: Always
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ['ALL']
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 998
            runAsGroup: 20
            privileged: false
          env:
          - name: TZ
            value: Europe/Amsterdam
          name: zigbee2mqtt
          volumeMounts:
            - mountPath: "/app/data"
              name: zigbee2mqtt-data
          resources:
            requests:
              memory: 128Mi
              cpu: "500m"
              ongy.net/zigbee: 1
            limits:
              memory: 256Mi
              cpu: "500m"
              ongy.net/zigbee: 1
---
apiVersion: v1
kind: Service
metadata:
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  selector:
    app: zigbee2mqtt
  ports:
    - protocol: TCP
      port: 8080
      name: http
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: zigbee2mqtt
spec:
  gateways: [istio-system/gateway]
  hosts: [zigbee2mqtt.local.ongy.net]
  http:
  - route:
    - destination:
        host: zigbee2mqtt.zigbee2mqtt.svc.cluster.local
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: istio-system
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: mosquitto
      ports:
        - protocol: TCP
          port: 1883
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: z2m
  namespace: istio-system
spec:
  action: CUSTOM
  provider:
    # The provider name must match the extension provider defined in the mesh config.
    # You can also replace this with sample-ext-authz-http to test the other external authorizer definition.
    name: authentik-proxy
  rules:
  # The rules specify when to trigger the external authorizer.
  - to:
    - operation:
        hosts:
        - "zigbee2mqtt.local.ongy.net"
