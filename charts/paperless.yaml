---
apiVersion: v1
kind: Namespace
metadata:
  name: paperless
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: psql-client-secret
  namespace: paperless
spec:
  isCA: false
  duration: 8760h # 1 years
  commonName: paperless
  secretName: psql-client-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: psql-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: broker
  name: broker
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      volumes:
        - name: redis-data
          nfs:
            path: /srv/share/backed/appdata/paperless/redis
            server: mario.local.ongy.net
            readOnly: false
      containers:
        - image: docker.io/library/redis:7
          name: broker
          volumeMounts:
            - mountPath: "/data"
              name: redis-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: core
  name: core
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: core
  template:
    metadata:
      labels:
        app: core
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: paperless-data
          nfs:
            path: /srv/share/backed/appdata/paperless/data
            server: mario.local.ongy.net
            readOnly: false
        - name: paperless-media
          nfs:
            path: /srv/share/backed/appdata/paperless/media
            server: mario.local.ongy.net
            readOnly: false
        - name: paperless-export
          nfs:
            path: /srv/share/backed/appdata/paperless/export
            server: mario.local.ongy.net
            readOnly: false
        - name: paperless-consume
          nfs:
            path: /srv/share/backed/appdata/paperless/consume
            server: mario.local.ongy.net
            readOnly: false
        - name: psql-tls-secrets
          secret:
            secretName: psql-client-secret
            optional: false
            defaultMode: 0640
      containers:
        - image: cr.local.ongy.net/paperless-ngx/paperless-ngx:latest
          readinessProbe:
            httpGet:
              path: /
              port: 8000
              httpHeaders:
              - name: Host
                value: paperless.local.ongy.net
          env:
          - name: PAPERLESS_AUTO_LOGIN_USERNAME
            value: admin
          - name: PAPERLESS_DBHOST
            value: "psql.psql"
          - name: PAPERLESS_REDIS
            value: "redis://broker:6379"
          - name: PAPERLESS_DBSSLMODE
            value: "verify-ca"
          - name: PAPERLESS_DBSSLROOTCERT
            value: "/psql-tls-secrets/..data/ca.crt"
          - name: PAPERLESS_DBSSLCERT
            value: "/psql-tls-secrets/..data/tls.crt"
          - name: PAPERLESS_DBSSLKEY
            value: "/psql-tls-secrets/..data/tls.key"
          - name: PAPERLESS_TIME_ZONE
            value: "Europe/Berlin"
          - name: PAPERLESS_ADMIN_USER
            value: "admin"
          - name: PAPERLESS_ADMIN_PASSWORD
            value: "password"
          - name: PAPERLESS_URL
            value: https://paperless.local.ongy.net
          name: core
          volumeMounts:
            - mountPath: "/usr/src/paperless/data"
              name: paperless-data
            - mountPath: "/usr/src/paperless/media"
              name: paperless-media
            - mountPath: "/usr/src/paperless/export"
              name: paperless-export
            - mountPath: "/usr/src/paperless/consume"
              name: paperless-consume
            - name: psql-tls-secrets
              mountPath: "/psql-tls-secrets"
              readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: core
  namespace: paperless
spec:
  selector:
    app: core
  ports:
    - protocol: TCP
      port: 8000
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  namespace: paperless
spec:
  selector:
    app: broker
  ports:
    - protocol: TCP
      port: 6379
      name: http
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: paperless
spec:
  gateways: [istio-system/gateway]
  hosts: [paperless.local.ongy.net]
  http:
  - route:
    - destination:
        host: core.paperless.svc.cluster.local
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: core
  namespace: paperless
spec:
  podSelector:
    matchLabels:
      app: core
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: istio-system
      ports:
        - protocol: TCP
          port: 8000
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: psql
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: paperless
      ports:
        - protocol: TCP
          port: 6379
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: broker
  namespace: paperless
spec:
  podSelector:
    matchLabels:
      app: broker
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: paperless
      ports:
        - protocol: TCP
          port: 6379

